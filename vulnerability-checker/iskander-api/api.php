<?php

// read the incoming POST body (the JSON)
$input = file_get_contents('php://input');
$plugins = json_decode($input, true);

include("ArrayToTextTable.php");
use dekor\ArrayToTextTable;

class WP_Vuln {

	private $vulndb_plugins = "plugins-json/";
	private $vulndb_themes = "themes-json/";

	public function __construct() {
		error_reporting(0);
	}

	public function check_plugin_vulnerability($plugin, $version) {

		if($version == "") {
			return false;
		}

		$plugin_vulnerability = @file_get_contents($this->vulndb_plugins.$plugin);

		if($plugin_vulnerability) {

			$plugin_vulnerability_data = json_decode(file_get_contents($this->vulndb_plugins.$plugin), true);

			foreach($plugin_vulnerability_data["data"]["vulnerabilities"] as $plugin_vulnerability) {
				if(version_compare($version, $plugin_vulnerability["fixed_in"], '<')) {
					return true;
				} else {
					return false;
				}
			}
		} else {
			return false;
		}
	}

	public function check_theme_vulnerability($theme, $version) {
		$theme_vulnerability = @file_get_contents($this->vulndb_plugins.$plugin);

		if($theme_vulnerability) {

			$theme_vulnerability_data = json_decode(file_get_contents($this->vulndb_themes.$theme), true);

			foreach($theme_vulnerability_data["data"]["vulnerabilities"] as $theme_vulnerability) {
				if(version_compare($version, $theme_vulnerability["fixed_in"], '<')) {
					return true;
				} else {
					return false;
				}
			}
		}
	}

	public function check_plugin_batch($plugins_json) {
		$response_data = array();

		$plugins = json_decode($plugins_json, true);
		foreach($plugins as $plugin) {
			$status = $this->check_plugin_vulnerability($plugin["name"], $plugin["version"]);
			if($status == true) {
				$response_data[$plugin["name"]] = true;
			} else {
				$response_data[$plugin["name"]] = false;
			}
		}

		return $response_data;
	}

	public function check_themes_batch($themes_json) {
		$response_data = array();

		$themes = json_decode($themes_json, true);
		foreach($themes as $theme) {
			$status = $this->check_theme_vulnerability($theme["name"], $theme["version"]);
			if($status == true) {
				$response_data[$theme["name"]] = true;
			} else {
				$response_data[$theme["name"]] = false;
			}
		}

		return $response_data;
	}

	public function format_data_table($data_array) {
		foreach($data_array as $plugin=>$vulnerable) {
			$response_array[] = array("Name" => $plugin, "Vulnerable" => ($vulnerable ? "YES" : ""));
		}

		return (new ArrayToTextTable($response_array))->render();
	}

}
